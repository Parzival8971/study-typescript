{"ast":null,"code":"var _jsxFileName = \"/Users/eomseonghun/Desktop/study-typescript/react-ts/src/components/NewTodo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTodo = props => {\n  _s();\n  const todoTextInputRef = useRef(null);\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredText = todoTextInputRef.current.value;\n    if (enteredText.trim().length === 0) {\n      // throw an arror\n      return;\n    }\n    props.onAddTodo(enteredText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n_c = NewTodo;\nexport default NewTodo;\nvar _c;\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["React","useRef","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","onAddTodo"],"sources":["/Users/eomseonghun/Desktop/study-typescript/react-ts/src/components/NewTodo.tsx"],"sourcesContent":["import React, { useRef } from 'react';\n\nconst NewTodo: React.FC<{ onAddTodo: (text: string) => void }> = (props) => {\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const enteredText = todoTextInputRef.current!.value;\n\n    if (enteredText.trim().length === 0) {\n      // throw an arror\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <label htmlFor='text'>Todo Text</label>\n      <input type='text' id='text' ref={todoTextInputRef} />\n      <button>Add Todo</button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC;AAEtC,MAAMC,OAAwD,GAAIC,KAAK,IAAK;EAAA;EAC1E,MAAMC,gBAAgB,GAAGH,MAAM,CAAmB,IAAI,CAAC;EAEvD,MAAMI,aAAa,GAAIC,KAAsB,IAAK;IAChDA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAO,CAAEC,KAAK;IAEnD,IAAIF,WAAW,CAACG,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACnC;MACA;IACF;IAEAT,KAAK,CAACU,SAAS,CAACL,WAAW,CAAC;EAC9B,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEH,aAAc;IAAA,wBAC5B;MAAO,OAAO,EAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eACvC;MAAO,IAAI,EAAC,MAAM;MAAC,EAAE,EAAC,MAAM;MAAC,GAAG,EAAED;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACtD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEX,CAAC;AAAC,GAvBIF,OAAwD;AAAA,KAAxDA,OAAwD;AAyB9D,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}